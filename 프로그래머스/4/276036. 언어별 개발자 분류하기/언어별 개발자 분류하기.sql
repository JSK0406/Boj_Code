-- 코드를 작성해주세요

WITH A_GRADE AS (
    SELECT B.ID
    FROM SKILLCODES AS A
        JOIN DEVELOPERS AS B ON (A.CODE & B.SKILL_CODE) > 0
    WHERE A.NAME = 'Python' OR A.CATEGORY = 'Front End'
    GROUP BY B.ID HAVING COUNT(DISTINCT A.CATEGORY) >= 2
), B_GRADE AS (SELECT B.ID
    FROM SKILLCODES AS A
        JOIN DEVELOPERS AS B ON (A.CODE & B.SKILL_CODE) > 0
    WHERE A.NAME = 'C#' AND B.ID NOT IN (SELECT ID FROM A_GRADE)
), C_GRADE AS (
    SELECT B.ID
    FROM SKILLCODES AS A
        JOIN DEVELOPERS AS B ON (A.CODE & B.SKILL_CODE) > 0
    WHERE A.CATEGORY = 'Front End' AND
        B.ID NOT IN (SELECT ID FROM A_GRADE) AND
        B.ID NOT IN (SELECT ID FROM B_GRADE)
)

SELECT CASE WHEN ID IN (SELECT ID FROM A_GRADE) THEN 'A'
    WHEN ID IN (SELECT ID FROM B_GRADE) THEN 'B'
    WHEN ID IN (SELECT ID FROM C_GRADE) THEN 'C' END AS GRADE,
    ID,
    EMAIL
FROM DEVELOPERS
WHERE ID IN (SELECT ID FROM A_GRADE UNION ALL SELECT ID FROM B_GRADE UNION ALL SELECT ID FROM C_GRADE)
ORDER BY GRADE, ID